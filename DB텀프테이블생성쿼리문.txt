-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- customer Table Create SQL
CREATE TABLE customer
(
    customer_num         INT             NOT NULL, 
    customer_name        VARCHAR2(20)    NULL, 
    customer_phonenum    VARCHAR2(20)    NULL, 
    customer_address     VARCHAR2(40)    NULL, 
    CONSTRAINT CUSTOMER_PK PRIMARY KEY (customer_num)
)
/

CREATE SEQUENCE customer_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER customer_customer_num_AI_TRG
BEFORE INSERT ON customer 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT customer_SEQ.NEXTVAL
    INTO: NEW.customer_num
    FROM DUAL;
END;
/


-- office Table Create SQL
CREATE TABLE office
(
    office_num         INT              NOT NULL, 
    office_name        VARCHAR2(30)     NULL, 
    office_address     VARCHAR2(255)    NULL, 
    office_phonenum    VARCHAR2(20)     NULL, 
    office_paxnum      VARCHAR2(20)     NULL, 
    CONSTRAINT OFFICE_PK PRIMARY KEY (office_num)
)
/


-- staff Table Create SQL
CREATE TABLE staff
(
    staff_num            VARCHAR2(20)              NOT NULL, 
    office_num           INT              NOT NULL, 
    staff_job            VARCHAR2(20)     NULL, 
    staff_name           VARCHAR2(20)     NULL, 
    staff_phonenum       VARCHAR2(20)     NULL, 
    staff_residentnum    VARCHAR2(20)     NULL, 
    staff_address        VARCHAR2(255)    NULL, 
    CONSTRAINT STAFF_PK PRIMARY KEY (staff_num)
)
/

ALTER TABLE staff
    ADD CONSTRAINT FK_staff_office_num_office_off FOREIGN KEY (office_num)
        REFERENCES office (office_num)
/


-- item Table Create SQL
CREATE TABLE item
(
    item_num            INT              NOT NULL, 
    item_name           VARCHAR2(30)     NULL, 
    customer_num        INT              NOT NULL, 
    receiver_address    VARCHAR2(255)    NULL, 
    receiver_name       VARCHAR2(20)     NULL, 
    item_price          INT              NULL, 
    item_weight         VARCHAR2(20)     NULL, 
    CONSTRAINT ITEM_PK PRIMARY KEY (item_num)
)
/

CREATE SEQUENCE item_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER item_item_num_AI_TRG
BEFORE INSERT ON item 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT item_SEQ.NEXTVAL
    INTO: NEW.item_num
    FROM DUAL;
END;
/

ALTER TABLE item
    ADD CONSTRAINT FK_item_customer_num_customer_ FOREIGN KEY (customer_num)
        REFERENCES customer (customer_num)
/


-- send Table Create SQL
CREATE TABLE send
(
    send_num          INT             NOT NULL, 
    item_num          INT             NOT NULL, 
    staff_num         VARCHAR2(20)             NOT NULL, 
    date              VARCHAR2(20)    NULL, 
    time              VARCHAR2(20)    NULL, 
    item_position     VARCHAR2(30)    NULL, 
    handling_state    VARCHAR2(20)    NULL, 
    receiver_name     VARCHAR2(20)    NULL, 
    CONSTRAINT SEND_PK PRIMARY KEY (send_num)
)
/

CREATE SEQUENCE send_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER send_send_num_AI_TRG
BEFORE INSERT ON send 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT send_SEQ.NEXTVAL
    INTO: NEW.send_num
    FROM DUAL;
END;
/

ALTER TABLE send
    ADD CONSTRAINT FK_send_item_num_item_item_num FOREIGN KEY (item_num)
        REFERENCES item (item_num)
/

ALTER TABLE send
    ADD CONSTRAINT FK_send_staff_num_staff_staff_ FOREIGN KEY (staff_num)
        REFERENCES staff (staff_num)
/


-- receipt Table Create SQL
CREATE TABLE receipt
(
    receipt_num     INT             NOT NULL, 
    customer_num    INT             NOT NULL, 
    item_num        INT             NOT NULL, 
    staff_num       VARCHAR2(20)             NOT NULL, 
    receipt_date    VARCHAR2(20)    NULL, 
    send_type       VARCHAR2(20)    NULL, 
    pay_type        VARCHAR2(20)    NULL, 
    send_pay        INT             NULL, 
    CONSTRAINT RECEIPT_PK PRIMARY KEY (receipt_num)
)
/

CREATE SEQUENCE receipt_SEQ
START WITH 1
INCREMENT BY 1;
/

CREATE OR REPLACE TRIGGER receipt_receipt_num_AI_TRG
BEFORE INSERT ON receipt 
REFERENCING NEW AS NEW FOR EACH ROW 
BEGIN 
    SELECT receipt_SEQ.NEXTVAL
    INTO: NEW.receipt_num
    FROM DUAL;
END;
/

ALTER TABLE receipt
    ADD CONSTRAINT FK_receipt_customer_num_custom FOREIGN KEY (customer_num)
        REFERENCES customer (customer_num)
/

ALTER TABLE receipt
    ADD CONSTRAINT FK_receipt_item_num_item_item_ FOREIGN KEY (item_num)
        REFERENCES item (item_num)
/

ALTER TABLE receipt
    ADD CONSTRAINT FK_receipt_staff_num_staff_sta FOREIGN KEY (staff_num)
        REFERENCES staff (staff_num)
/


